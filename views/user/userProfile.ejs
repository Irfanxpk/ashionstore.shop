<style type="text/css">
  body {
    margin-top: 20px;
    background: #eee;
  }
  /* My Account */
  .payments-item img.mr-3 {
    width: 47px;
  }
  .order-list .btn {
    border-radius: 2px;
    min-width: 121px;
    font-size: 13px;
    padding: 7px 0 7px 0;
  }
  .osahan-account-page-left .nav-link {
    padding: 18px 20px;
    border: none;
    font-weight: 600;
    color: #535665;
  }
  .osahan-account-page-left .nav-link i {
    width: 28px;
    height: 28px;
    background: #535665;
    display: inline-block;
    text-align: center;
    line-height: 29px;
    font-size: 15px;
    border-radius: 50px;
    margin: 0 7px 0 0px;
    color: #fff;
  }
  .osahan-account-page-left .nav-link.active {
    background: #f3f7f8;
    color: #282c3f !important;
  }
  .osahan-account-page-left .nav-link.active i {
    background: #282c3f !important;
  }
  .osahan-user-media img {
    width: 90px;
  }
  .card offer-card h5.card-title {
    border: 2px dotted #000;
  }
  .card.offer-card h5 {
    border: 1px dotted #daceb7;
    display: inline-table;
    color: #17a2b8;
    margin: 0 0 19px 0;
    font-size: 15px;
    padding: 6px 10px 6px 6px;
    border-radius: 2px;
    background: #fffae6;
    position: relative;
  }
  .card.offer-card h5 img {
    height: 22px;
    object-fit: cover;
    width: 22px;
    margin: 0 8px 0 0;
    border-radius: 2px;
  }
  .card.offer-card h5:after {
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-bottom: 4px solid #daceb7;
    content: "";
    left: 30px;
    position: absolute;
    bottom: 0;
  }
  .card.offer-card h5:before {
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-top: 4px solid #daceb7;
    content: "";
    left: 30px;
    position: absolute;
    top: 0;
  }
  .payments-item .media {
    align-items: center;
  }
  .payments-item .media img {
    margin: 0 40px 0 11px !important;
  }
  .reviews-members .media .mr-3 {
    width: 56px;
    height: 56px;
    object-fit: cover;
  }
  .order-list img.mr-4 {
    width: 70px;
    height: 70px;
    object-fit: cover;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
    border-radius: 2px;
  }
  .osahan-cart-item p.text-gray.float-right {
    margin: 3px 0 0 0;
    font-size: 12px;
  }
  .osahan-cart-item .food-item {
    vertical-align: bottom;
  }

  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #000000;
  }

  .shadow-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
  }

  .rounded-pill {
    border-radius: 50rem !important;
  }
  a:hover {
    text-decoration: none;
  }
  .bn9 {
    padding: 2px;
    outline: 0;
    font-size: 10px;
    color: rgb(0, 0, 0);
    background: -webkit-gradient(
      linear,
      left top,
      right top,
      from(#fdde5c),
      color-stop(#f8ab5e),
      color-stop(#f56a62),
      color-stop(#a176c8),
      color-stop(#759beb),
      color-stop(#65beb3),
      to(#70db96)
    );
    background: linear-gradient(
      to right,
      #fdde5c,
      #f8ab5e,
      #f56a62,
      #a176c8,
      #759beb,
      #65beb3,
      #70db96
    );
    border-radius: 30px;
    border: 0;
    box-shadow: none;
    cursor: pointer;
  }

  .bn9 > span {
    display: block;
    padding: 3px 10px;
    font-size: 13px;
    font-weight: 500;
    background: #ebebeb;
    border-radius: 30px;
  }
</style>

  <style>
    
  
    .wallet {
      border: 1px solid #ddd;
      padding: 20px;
      width: 70%;
      max-width: 800px;
      margin: 0 auto;
    }
  
    .transaction-history {
      margin-top: 20px;
    }
  
    table {
      width: 100%;
      border-collapse: collapse;
    }
  
    th,
    td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
  
    th {
      background-color: #f2f2f2;
    }
  
    tr:hover {
      background-color: #ddd;
    }
  
    @media (max-width: 767px) {
  
      .transaction-history th:nth-child(3),
      .transaction-history td:nth-child(3) {
        display: none;
      }
    }





    .referral-code {
			background-color: #007bff;
			border-radius: 5px;
			color: #fff;
			padding: 10px 20px;
			text-transform: uppercase;
			font-size: 1.2em;
			margin-bottom: 20px;
			cursor: pointer;
			transition: background-color 0.3s ease;
		}
		.referral-code:hover {
			background-color: #0056b3;
		}
		.copy-message {
			background-color: #d1e7fd;
			border-radius: 5px;
			padding: 10px 20px;
			font-size: 1.2em;
			margin-top: 20px;
			display: none;
		}
		.show-message {
			display: block;
		}


/* Coupon card styles */
.coupon-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
}

.coupon-card {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    width: 200px;
    text-align: center;
}

.coupon-card h3 {
    margin-bottom: 10px;
    color: #333;
}

.coupon-card p {
    margin: 5px 0;
    color: #555;
}

.copy-btn {
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    background-color: #3498db;
    color: #fff;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.copy-btn:hover {
    background-color: #2980b9;
}


  </style>
<link rel="stylesheet" href="/css/userprofile.css" />
<%- include("../partials/header") %>

<div class="container-xl px-4 mt-4">
  <ul class="nav nav-tabs" id="myTabs" role="tablist">
    <li class="nav-item" role="presentation">
      <a
        class="nav-link active ms-0"
        id="profile-tab"
        data-bs-toggle="tab"
        href="#profile"
        role="tab"
        aria-controls="profile"
        aria-selected="true"
        >Profile</a
      >
    </li>
    <li class="nav-item" role="presentation">
      <a
        class="nav-link"
        id="billing-tab"
        data-bs-toggle="tab"
        href="#Address"
        role="tab"
        aria-controls="Address"
        aria-selected="false"
        >Address</a
      >
    </li>
    <li class="nav-item" role="presentation">
      <a
        class="nav-link"
        id="security-tab"
        data-bs-toggle="tab"
        href="#security"
        role="tab"
        aria-controls="security"
        aria-selected="false"
        >Orderes</a
      >
    </li>
    <!-- <li class="nav-item" role="presentation">
      <a
        class="nav-link"
        id="notifications-tab"
        data-bs-toggle="tab"
        href="#notifications"
        role="tab"
        aria-controls="notifications"
        aria-selected="false"
        >Wallet</a
      >
    </li> -->
  </ul>
  <div class="tab-content" id="myTabsContent">
    <div
      class="tab-pane fade show active"
      id="profile"
      role="tabpanel"
      aria-labelledby="profile-tab"
    >
      <!-- Profile Tab Content -->
      <div class="row">
        <div class="row">
          <!-- <div class="col-xl-4">
            <div class="card mb-4 mb-xl-0">
              <div class="card-header">Profile Picture</div>
              <div class="card-body text-center">
                <img
                  class="img-account-profile rounded-circle mb-2"
                  src="http://bootdey.com/img/Content/avatar/avatar1.png"
                  alt
                />

                <div class="small font-italic text-muted mb-4">
                  JPG or PNG no larger than 5 MB
                </div>

                <button class="btn btn-primary" type="button">
                  Upload new image
                </button>
              </div>
            </div>
          </div> -->
          <div class="col-xl-4">
          <div class="osahan-account-page-left shadow-sm bg-white h-100">
            <div class="border-bottom p-4">
              <div class="osahan-user text-center">
                <div class="osahan-user-media">
                  <img class="mb-3 rounded-pill shadow-sm mt-1" src="/img/7309681.jpg"
                    alt="gurdeep singh osahan" />
                  <div class="osahan-user-media-body">
                    <h6 class="mb-2">
                      <%= userData.firstName %>
                    </h6>
                    <p class="mb-1">+91 <%= userData.phone %>
                    </p>
                    <p>
                      <%= userData.email %>
                    </p>
                    <!-- <p class="mb-0 text-black font-weight-bold"><a class="text-primary mr-3" data-toggle="modal" data-target="#edit-profile-modal" href="#"><i class="icofont-ui-edit"></i> EDIT</a></p> -->
                  </div>
                </div>
              </div>
            </div>
            <!-- <ul class="nav nav-tabs flex-column border-0 pt-4 pl-4 pb-4" id="myTab" role="tablist">
                              <li class="nav-item">
                                  <a class="nav-link" id="addresses-tab" data-toggle="tab" href="#addresses" role="tab" aria-controls="addresses" aria-selected="false"><i class="icofont-location-pin"></i> Addresses</a>
                              </li>
                          </ul> -->
          </div>
          </div>


          <div class="col-xl-8">
            <div class="card mb-4">
              <div class="card-header">Account Details</div>
              <div class="card-body">
                <form id="myForm" name="myForm">
                  <!-- <div class="mb-3">
<label class="small mb-1" for="inputUsername">Username (how your name will appear to other users on the site)</label>
<input class="form-control" name="username" id="inputUsername" type="text" placeholder="Enter your username" value="username" readonly >
</div> -->

                  <div class="row gx-3 mb-3">
                    <div class="col-md-6">
                      <label class="small mb-1" for="inputFirstName"
                        >First name</label
                      >
                      <input
                        class="form-control"
                        name="firstName"
                        id="inputFirstName"
                        type="text"
                        placeholder="Enter your first name"
                        value="<%= userData.firstName %>"
                        readonly
                      />
                    </div>

                    <div class="col-md-6">
                      <label class="small mb-1" for="inputLastName"
                        >Last name</label
                      >
                      <input
                        class="form-control"
                        name="lastName"
                        id="inputLastName"
                        type="text"
                        placeholder="Enter your last name"
                        value="<%= userData.lastName %>"
                        readonly
                      />
                    </div>
                  </div>

                  <div class="row gx-3 mb-3">
                    <div class="col-md-6">
                      <label class="small mb-1" for="inputPhone"
                        >Phone number</label
                      >
                      <input
                        class="form-control"
                        name="phone"
                        id="inputPhone"
                        type="tel"
                        placeholder="Enter your phone number"
                        value="<%= userData.phone %>"
                        readonly
                      />
                    </div>

                    <!-- <div class="col-md-6">
<label class="small mb-1" for="inputLocation">Location</label>
<input class="form-control" id="inputLocation" type="text" placeholder="Enter your location" value="San Francisco, CA" readonly>
</div> -->
                  </div>

                  <!-- <div class="mb-3">
<label class="small mb-1" for="inputEmailAddress">Email address</label>
<input class="form-control" name="email" id="inputEmailAddress" type="email" placeholder="Enter your email address" value="<%= userData.email %>" readonly>
</div> -->

                  <div class="row gx-3 mb-3"></div>

                  <button
                    class="btn btn-primary"
                    id="save"
                    type="button"
                    onclick="submitForm()"
                    style="display: none"
                  >
                    Save changes
                  </button>
                  <button
                    class="btn btn-primary"
                    id="edit"
                    type="button"
                    onclick="editaddress()"
                    style="display: block"
                  >
                    Edit
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>

        <script>
          function editaddress() {
            var form = document.querySelector('form[name="myForm"]');
            var elements = form.querySelectorAll("input[readonly]");

            elements.forEach(function (element) {
              element.removeAttribute("readonly");
            });

            document.getElementById("edit").style.display = "none";
            document.getElementById("save").style.display = "block";
          }
        </script>
        <script>
          function setReadOnly() {
            var form = document.querySelector('form[name="myForm"]');
            var elements = form.querySelectorAll("input:not([readonly])");

            elements.forEach(function (element) {
              element.setAttribute("readonly", true);
            });
          }

          function submitForm() {
            const form = document.getElementById("myForm");
            const formData = new FormData(form);

            fetch("/edit/<%= userData._id %>", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(Object.fromEntries(formData)),
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error("Server response was not ok");
                }
                return response.json();
              })
              .then((data) => {
                document.getElementById("edit").style.display = "block";
                document.getElementById("save").style.display = "none";
                setReadOnly();
              })
              .catch((error) => {
                console.error("Fetch error:", error);
              });
          }
        </script>
        <!-- Add your Profile tab content here -->
      </div>
    </div>

    <div
      class="tab-pane fade"
      id="Address"
      role="tabpanel"
      aria-labelledby="Address-tab"
    >
      <!-- Billing Tab Content -->
      <div class="row" id="reloadaddress">
        <!-- Add your Billing tab content here -->

        <div class="col-md-3">
          <div class="osahan-account-page-left shadow-sm bg-white h-100">
            <div class="border-bottom p-4">
              <div class="osahan-user text-center">
                <div class="osahan-user-media">
                  <img
                    class="mb-3 rounded-pill shadow-sm mt-1"
                    src="/img/7309681.jpg"
                    alt="gurdeep singh osahan"
                  />
                  <div class="osahan-user-media-body">
                    <h6 class="mb-2"><%= userData.firstName %></h6>
                    <p class="mb-1">+91 <%= userData.phone %></p>
                    <p><%= userData.email %></p>
                    <!-- <p class="mb-0 text-black font-weight-bold"><a class="text-primary mr-3" data-toggle="modal" data-target="#edit-profile-modal" href="#"><i class="icofont-ui-edit"></i> EDIT</a></p> -->
                  </div>
                </div>
              </div>
            </div>
            <!-- <ul class="nav nav-tabs flex-column border-0 pt-4 pl-4 pb-4" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" id="addresses-tab" data-toggle="tab" href="#addresses" role="tab" aria-controls="addresses" aria-selected="false"><i class="icofont-location-pin"></i> Addresses</a>
                    </li>
                </ul> -->
          </div>
        </div>

        <div class="col-md-9">
          <div class="osahan-account-page-right shadow-sm bg-white p-4 h-100">
            <div class="tab-content" id="myTabContent">
              <div
                class="tab-pane fade active show"
                id="addresses"
                role="tabpanel"
                aria-labelledby="addresses-tab"
              >
                <h4 class="font-weight-bold mt-0 mb-4">Manage Addresses</h4>
                <a class="text-danger" href="#" id="addAddressButton">
                  <i class="icofont-ui-delete"></i> Add
                </a>

                <div class="row">
                  <% userData.addresses.forEach(function(address) { %>
                  <div class="col-md-6">
                    <div class="bg-white card addresses-item mb-4 shadow-sm">
                      <div class="gold-members p-4">
                        <div class="media">
                          <div class="mr-3">
                            <i class="icofont-ui-home icofont-3x"></i>
                          </div>
                          <div class="media-body">
                            <h6 class="mb-1 text-secondary">
                              <%= address.location %>
                            </h6>
                            <p class="text-black">
                              <%= address.address %>, <%= address.city %>, <%=
                              address.state %> <%= address.zip %>, <%=
                              address.country %>
                            </p>
                            <p class="mb-0 text-black font-weight-bold">
                              <a
                                class="text-primary mr-3"
                                onclick="editUserAddress('<%= address._id %>')"
                                href="#"
                              >
                                <i class="icofont-ui-edit"></i> EDIT
                              </a>
                              <a
                                class="text-danger delete-address-button"
                                id="deleteAddressButton"
                                data-address-id="<%= address._id %>"
                                href="#"
                              >
                                <i class="icofont-ui-delete"></i> DELETE
                              </a>
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <% }); %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- add address -->

    <div
      class="tab-pane fade"
      id="security"
      role="tabpanel"
      aria-labelledby="security-tab"
    >
      <!-- Security Tab Content -->
      <div class="row">
        <!-- Add your Security tab content here -->

        <div class="container">
          <div class="row">
            <div class="col-md-3">
              <div class="osahan-account-page-left shadow-sm bg-white h-100">
                <div class="border-bottom p-4">
                  <div class="osahan-user text-center">
                    <div class="osahan-user-media">
                      <img
                        class="mb-3 rounded-pill shadow-sm mt-1"
                        src="/img/7309681.jpg"
                        alt="gurdeep singh osahan"
                      />
                      <div class="osahan-user-media-body">
                        <h6 class="mb-2"><%= userData.firstName %></h6>
                        <p class="mb-1">+91 <%= userData.phone %></p>
                        <p><%= userData.email %></p>
                        <!-- <p class="mb-0 text-black font-weight-bold"><a class="text-primary mr-3" data-toggle="modal" data-target="#edit-profile-modal" href="#"><i class="icofont-ui-edit"></i> EDIT</a></p> -->
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <ul
                class="nav nav-tabs flex-column border-0 pt-4 pl-4 pb-4"
                id="myTab"
                role="tablist"
              >
                <li class="nav-item">
                  <a
                    class="nav-link"
                    id="orders-tab"
                    data-toggle="tab"
                    href="#orders"
                    role="tab"
                    aria-controls="orders"
                    aria-selected="false"
                    ><i class="icofont-food-cart"></i> Orders</a
                  >
                </li>
              </ul>
            </div>
            <div class="col-md-9">
              <div
                class="osahan-account-page-right shadow-sm bg-white p-4 h-100"
              >
                <div class="tab-content" id="myTabContent">
                  <div
                    class="tab-pane fade active show"
                    id="orders"
                    role="tabpanel"
                    aria-labelledby="orders-tab"
                  >
                    <h4 class="font-weight-bold mt-0 mb-4">Orders</h4>
                    <% if(orders.length > 0) {%> <% orders.forEach(order => { %>
                    <% order.items.forEach(item => { %>
                    <div class="bg-white card mb-4 order-list shadow-sm">
                      <!-- views/order.ejs -->
                      <div class="gold-members p-4">
                        <a href="#">
                          <!-- Optional link for the entire order block -->
                        </a>
                        <div class="media">
                          <a href="#">
                            <img
                              class="mr-4"
                              src="uploads/product_resized/<%= item.img %>"
                              alt="Generic placeholder image"
                            />
                          </a>
                          <div class="media-body">
                            <a href="#">
                              <span class="float-right text-info"
                                ><%= order.status %> &nbsp; <%=
                                order.purchaseDate.toDateString() %>
                                <i
                                  class="icofont-check-circled text-success"
                                ></i
                              ></span>
                            </a>
                            <h6 class="mb-2">
                              <a href="#"></a>
                              <a
                                href="/orderDetails/<%= order._id %>"
                                class="text-black"
                                ><%= item.name %></a
                              >
                            </h6>

                            <!-- <p class="text-gray mb-3"><i class="icofont-list"></i> ORDER #<%= order._id %> <i class="icofont-clock-time ml-2"><br></i> <% const formattedDate = new Date(order.purchaseDate).toLocaleString(); %>
<%= formattedDate %></p>
        
          <p class="text-dark"><%= item.name %> x <%= item.count %></p>
         -->
                            <hr />
                            <div class="float-right">
                              <!-- <a class="btn btn-sm btn-outline-primary" href="#"><i class="icofont-headphone-alt"></i> HELP</a> -->
                              <!-- Replace the "REORDER" button with "CANCEL" button -->

                              <a href="/orderDetails/<%= order._id %>"
                                ><button class="bn9">
                                  <span>Detail</span>
                                </button></a
                              >

                              <!-- <a class="btn btn-sm btn-danger" onclick="confirmCancellation('<%= order._id %>')">
            <i class="icofont-close"></i> CANCEL
          </a> -->
                            </div>
                            <p class="mb-0 text-black text-primary pt-2">
                              <span class="text-black font-weight-bold">
                                Total :</span
                              >
                              $<%= order.totalAmount %>
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% }); %> <% }); %> <% }else { %>

                    <h1>No Orders Yet!!</h1>

                    <% } %>

                    <script>
                      function confirmCancellation(orderId) {
                        Swal.fire({
                          title: "Are you sure?",
                          text: "This action cannot be undone!",
                          icon: "warning",
                          showCancelButton: true,
                          confirmButtonColor: "#d33",
                          cancelButtonColor: "#3085d6",
                          confirmButtonText: "Yes, cancel it!",
                        }).then((result) => {
                          if (result.isConfirmed) {
                            // If user confirms, make a fetch request to cancel the order
                            fetch(`/cancelOrder/${orderId}`, {
                              method: "POST", // or 'DELETE', 'PUT', etc. depending on your backend setup
                              // Add headers and body as needed
                            })
                              .then((response) => {
                                if (response.ok) {
                                  // If cancellation was successful, remove the button
                                  const cancelButton =
                                    document.querySelector(".btn-danger");
                                  if (cancelButton) {
                                    cancelButton.remove();
                                  }
                                  Swal.fire(
                                    "Cancelled!",
                                    "Your order has been cancelled.",
                                    "success"
                                  );
                                } else {
                                  Swal.fire(
                                    "Error!",
                                    "Unable to cancel the order.",
                                    "error"
                                  );
                                }
                              })
                              .catch((error) => {
                                Swal.fire(
                                  "Error!",
                                  "Something went wrong.",
                                  "error"
                                );
                                console.error("Error:", error);
                              });
                          }
                        });
                      }
                    </script>



 
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="tab-pane fade"
      id="notifications"
      role="tabpanel"
      aria-labelledby="notifications-tab"
    >
      <!-- Notifications Tab Content -->
      
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.8/clipboard.min.js"></script>
<%- include("../partials/footer") %>

<script>
  document.getElementById("addAddressButton").addEventListener("click", () => {
    Swal.fire({
      title: "Add New Address",
      html:
        '<input id="address" class="swal2-input" placeholder="Address" required>' +
        '<input id="city" class="swal2-input" placeholder="City" required>' +
        '<input id="zip" class="swal2-input" placeholder="ZIP Code" required>' +
        '<input id="email" class="swal2-input" placeholder="Email" required>' +
        '<input id="Phone" class="swal2-input" type="number" placeholder="Phone" required>' +
        '<select id="state" class="swal2-select" required> ' +
        '<option value="">Select State</option>' +
        '<option value="Andhra Pradesh">Andhra Pradesh</option>' +
        '<option value="Arunachal Pradesh">Arunachal Pradesh</option>' +
        '<option value="Assam">Assam</option>' +
        '<option value="Bihar">Bihar</option>' +
        '<option value="Chhattisgarh">Chhattisgarh</option>' +
        ' <option value="Goa">Goa</option>' +
        ' <option value="Gujarat">Gujarat</option>' +
        '<option value="Haryana">Haryana</option>' +
        ' <option value="Himachal Pradesh">Himachal Pradesh</option>' +
        '<option value="Jharkhand">Jharkhand</option>' +
        ' <option value="Karnataka">Karnataka</option>' +
        '<option value="Kerala">Kerala</option>' +
        '<option value="Madhya Pradesh">Madhya Pradesh</option>' +
        '<option value="Maharashtra">Maharashtra</option>' +
        '<option value="Manipur">Manipur</option>' +
        '<option value="Meghalaya">Meghalaya</option>' +
        '<option value="Mizoram">Mizoram</option>' +
        '<option value="Nagaland">Nagaland</option>' +
        '<option value="Odisha">Odisha</option>' +
        '<option value="Punjab">Punjab</option>' +
        '<option value="Rajasthan">Rajasthan</option>' +
        '<option value="Sikkim">Sikkim</option>' +
        '<option value="Tamil Nadu">Tamil Nadu</option>' +
        '<option value="Telangana">Telangana</option>' +
        '<option value="Tripura">Tripura</option>' +
        '<option value="Uttar Pradesh">Uttar Pradesh</option>' +
        '<option value="Uttarakhand">Uttarakhand</option>' +
        '<option value="West Bengal">West Bengal</option>' +
        "</select>",
      showCancelButton: true,
      confirmButtonText: "Add",
      preConfirm: () => {
        const address = Swal.getPopup().querySelector("#address").value;
        const city = Swal.getPopup().querySelector("#city").value;
        const zip = Swal.getPopup().querySelector("#zip").value;
        const email = Swal.getPopup().querySelector("#email").value;
        const phone = Swal.getPopup().querySelector("#Phone").value;
        const state = Swal.getPopup().querySelector("#state").value;

        // Validate the selected state (Make sure it's not the default "Select State" option)
        if (state || address || phone || email || zip || city == "") {
          Swal.showValidationMessage("Please fill all the feilds.");
        }

        // Send the data to the backend using Fetch
        fetch("/addAddress", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            address,
            city,
            zip,
            email,
            phone,
            state,
          }),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error(response.statusText); // or handle the error in a different way
            }
            return response.json();
          })
          .then((data) => {
            // Handle the response from the server, e.g., display a success message or the newly created address data
            console.log(data);
            // Swal.fire('Address Added', 'Address has been added successfully!', 'success');
            // $('#reloadaddress').load('/userprofile #reloadaddress');
            location.reload();
          })
          .catch((error) => {
            console.error(error);
            if (error.response.status == 400) {
              Swal.fire("Error", "All fields are required.", "error");
            } else {
              Swal.fire("Error", "An unexpected error occurred.", "error");
            }
          });
      },
    });
  });
</script>

<script>
  function editUserAddress(id) {
    console.log("hello iam editUserAddress");
    fetch(`/editAddress/${id}`)
      .then((response) => response.json())
      .then((userData) => {
        // Use SweetAlert to display user data
        Swal.fire({
          title: "Edit Your Address",
          html: `
          <input id="Addid" class="swal2-input" value="${userData.addresses[0]._id}" required hidden>
            <input id="address" class="swal2-input" value="${userData.addresses[0].address}" required>
    <input id="city" class="swal2-input" placeholder="City" value="${userData.addresses[0].city}" required>
    <input id="zip" class="swal2-input" placeholder="ZIP Code" value="${userData.addresses[0].zip}" required>
    <input id="email" class="swal2-input" placeholder="Email" value="${userData.addresses[0].email}" required>
    <input id="Phone" class="swal2-input" type="number" placeholder="Phone" value="${userData.addresses[0].phone}" required>
    <select id="state" class="swal2-select" value="${userData.addresses[0].state}" required> 
    <option value="">Select State</option>
    <option value="Andhra Pradesh">Andhra Pradesh</option>
    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
    <option value="Assam">Assam</option>
    <option value="Bihar">Bihar</option>
    <option value="Chhattisgarh">Chhattisgarh</option>
    <option value="Goa">Goa</option>
    <option value="Gujarat">Gujarat</option>
    <option value="Haryana">Haryana</option>
    <option value="Himachal Pradesh">Himachal Pradesh</option>
    <option value="Jharkhand">Jharkhand</option>
    <option value="Karnataka">Karnataka</option>
    <option value="Kerala">Kerala</option>
    <option value="Madhya Pradesh">Madhya Pradesh</option>
    <option value="Maharashtra">Maharashtra</option>
    <option value="Manipur">Manipur</option>
    <option value="Meghalaya">Meghalaya</option>
    <option value="Mizoram">Mizoram</option>
    <option value="Nagaland">Nagaland</option>
    <option value="Odisha">Odisha</option>
    <option value="Punjab">Punjab</option>
    <option value="Rajasthan">Rajasthan</option>
    <option value="Sikkim">Sikkim</option>
    <option value="Tamil Nadu">Tamil Nadu</option>
    <option value="Telangana">Telangana</option>
    <option value="Tripura">Tripura</option>
    <option value="Uttar Pradesh">Uttar Pradesh</option>
    <option value="Uttarakhand">Uttarakhand</option>
    <option value="West Bengal">West Bengal</option>
</select>
          `,
          showCancelButton: true,
          showCancelButton: true,
          confirmButtonText: "Add",
          preConfirm: () => {
            const address = Swal.getPopup().querySelector("#address").value;
            const city = Swal.getPopup().querySelector("#city").value;
            const zip = Swal.getPopup().querySelector("#zip").value;
            const email = Swal.getPopup().querySelector("#email").value;
            const phone = Swal.getPopup().querySelector("#Phone").value;
            const state = Swal.getPopup().querySelector("#state").value;

            // Validate the selected state (Make sure it's not the default "Select State" option)
            // Send the data to the backend using Fetch
            fetch(`/EditAddress/${userData._id}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                address,
                city,
                zip,
                email,
                phone,
                state,
                id,
              }),
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error(response.statusText); // or handle the error in a different way
                }
                return response.json();
              })
              .then((data) => {
                // Handle the response from the server, e.g., display a success message or the newly created address data
                console.log(data);
                // Swal.fire('Address Added', 'Address has been added successfully!', 'success');
                // $('#reloadaddress').load('/userprofile #reloadaddress');
                location.reload();
              })
              .catch((error) => {
                console.error(error);
                if (error.response.status == 400) {
                  Swal.fire("Error", "All fields are required.", "error");
                } else {
                  Swal.fire("Error", "An unexpected error occurred.", "error");
                }
              });
          },
        });
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  }
</script>

<script>
  // Use querySelectorAll to select all elements with the specified class
  document.querySelectorAll(".delete-address-button").forEach((button) => {
    button.addEventListener("click", () => {
      const addressId = button.getAttribute("data-address-id");

      Swal.fire({
        icon: "warning",
        title: "Are you sure?",
        confirmButtonColor: "#3085d6",
        confirmButtonText: "Delete",
        showCancelButton: true,
        cancelButtonColor: "#d33",
        text: "Please make sure.",
      }).then((result) => {
        if (result.isConfirmed) {
          // Fetch API to send a GET request to the backend
          fetch(`/deleteAddress/${addressId}`, {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
              // Add any additional headers if needed
            },
          })
            .then((response) => {
              return response.json();
            })
            .then((data) => {
              console.log("data indooo");
              reloadAddressContent();
              // Handle the response from the backend if needed
              console.log(data);
              // Optionally, you can redirect the user or perform other actions based on the response
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }
      });
    });
  });

  function reloadAddressContent() {
    //   $('#reloadaddress').load('/userprofile #reloadaddress');
    location.reload();
  }
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.8/clipboard.min.js"></script>
<script>
  const copyBtn = new ClipboardJS('#copy-btn');
  const copyMessage = document.getElementById('copy-message');

  copyBtn.on('success', () => {
    copyMessage.classList.add('show-message');
    setTimeout(() => {
      copyMessage.classList.remove('show-message');
    }, 2000);
  });
</script>

<script>
  function addAmount() {
    Swal.fire({
      title: "Enter the amount",
      input: "number",
      inputAttributes: {
        autocapitalize: "off"
      },
      showCancelButton: true,
      confirmButtonText: "Add",
      cancelButtonText: "Cancel",
      showLoaderOnConfirm: true,
      preConfirm: (amount) => {
        return fetch("/addAmount", {
          method: "POST",
          body: JSON.stringify({ amount }),
          headers: {
            "Content-Type": "application/json"
          }
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(response.statusText);
            }
            return response.json();
          })
          .catch(error => {
            Swal.showValidationMessage(`Request failed: ${error}`);
          });
      },
      allowOutsideClick: () => !Swal.isLoading()
    }).then((result) => {
      if (result.isConfirmed) {
        const razorpayOptions = {
          key: "rzp_test_5ObyJzizTQWfpx",
          amount: result.value.amount*100,
          currency: "INR",
          name: "ashionstore.shop",
          description: "Wallet Recharge",
          handler: function (response) {
            Swal.fire({
              position: "center",
              icon: "success",
              title: "Payment failed",
              showConfirmButton: false,
              timer: 1500,
            });
          },
          prefill: {
            email: "user@example.com",
            contact: "1234567890",
          },
          theme: {
            color: "#F37254"
          }
        };

        const razorpayInstance = new Razorpay(razorpayOptions);
        razorpayInstance.open();
      }
    });
  }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Initialize Clipboard.js
    var clipboard = new ClipboardJS('#copy-btn');

    clipboard.on('success', function (e) {
      // Show SweetAlert toast on successful copy
      Swal.fire({
        icon: 'success',
        title: 'Code copied to clipboard!',
        showConfirmButton: false,
        timer: 850
      });

      e.clearSelection();
    });

    clipboard.on('error', function () {
      // Show SweetAlert toast if there's an error
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Copy failed! Please try again.'
      });
    });
  });
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
